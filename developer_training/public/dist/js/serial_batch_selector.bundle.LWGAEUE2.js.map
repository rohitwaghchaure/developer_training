{
  "version": 3,
  "sources": ["../../../../../apps/developer_training/developer_training/public/js/serial_batch_selector.bundle.js"],
  "sourcesContent": ["erpnext.CustomSerialBatchPackageSelector = class SerialNoBatchBundleUpdate {\n\tconstructor(frm, item, callback) {\n\t\tdebugger\n\t\tthis.frm = frm;\n\t\tthis.item = item;\n\t\tthis.qty = item.qty;\n\t\tthis.callback = callback;\n\t\tthis.bundle = this.item?.is_rejected ?\n\t\t\tthis.item.rejected_serial_and_batch_bundle : this.item.serial_and_batch_bundle;\n\n\t\tthis.make();\n\t\tthis.render_data();\n\t}\n\n\tmake() {\n\t\tlet label = this.item?.has_serial_no ? __('Serial Nos') : __('Batch Nos');\n\t\tlet primary_label = this.bundle\n\t\t\t? __('Update') : __('Add');\n\n\t\tif (this.item?.has_serial_no && this.item?.batch_no) {\n\t\t\tlabel = __('Serial Nos / Batch Nos');\n\t\t}\n\n\t\tprimary_label += ' ' + label;\n\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: this.item?.title || primary_label,\n\t\t\tfields: this.get_dialog_fields(),\n\t\t\tprimary_action_label: primary_label,\n\t\t\tprimary_action: () => this.update_bundle_entries(),\n\t\t\tsecondary_action_label: __('Edit Full Form'),\n\t\t\tsecondary_action: () => this.edit_full_form(),\n\t\t});\n\n\t\tthis.dialog.show();\n\t\tthis.$scan_btn = this.dialog.$wrapper.find(\".link-btn\");\n\t\tthis.$scan_btn.css(\"display\", \"inline\");\n\n\t\tlet qty = this.item.stock_qty || this.item.transfer_qty || this.item.qty;\n\n\t\tif (this.item?.is_rejected) {\n\t\t\tqty = this.item.rejected_qty;\n\t\t}\n\n\t\tqty = Math.abs(qty);\n\t\tif (qty > 0) {\n\t\t\tthis.dialog.set_value(\"qty\", qty).then(() => {\n\t\t\t\tif (this.item.serial_no && !this.item.serial_and_batch_bundle) {\n\t\t\t\t\tlet serial_nos = this.item.serial_no.split('\\n');\n\t\t\t\t\tif (serial_nos.length > 1) {\n\t\t\t\t\t\tserial_nos.forEach(serial_no => {\n\t\t\t\t\t\t\tthis.dialog.fields_dict.entries.df.data.push({\n\t\t\t\t\t\t\t\tserial_no: serial_no,\n\t\t\t\t\t\t\t\tbatch_no: this.item.batch_no\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.dialog.set_value(\"scan_serial_no\", this.item.serial_no);\n\t\t\t\t\t}\n\t\t\t\t\tfrappe.model.set_value(this.item.doctype, this.item.name, 'serial_no', '');\n\t\t\t\t} else if (this.item.batch_no && !this.item.serial_and_batch_bundle) {\n\t\t\t\t\tthis.dialog.set_value(\"scan_batch_no\", this.item.batch_no);\n\t\t\t\t\tfrappe.model.set_value(this.item.doctype, this.item.name, 'batch_no', '');\n\t\t\t\t}\n\n\t\t\t\tthis.dialog.fields_dict.entries.grid.refresh();\n\t\t\t});\n\t\t}\n\t}\n\n\tget_serial_no_filters() {\n\t\tlet warehouse = this.item?.type_of_transaction === \"Outward\" ?\n\t\t\t(this.item.warehouse || this.item.s_warehouse) : \"\";\n\n\t\tif (this.frm.doc.doctype === 'Stock Entry') {\n\t\t\twarehouse = this.item.s_warehouse || this.item.t_warehouse;\n\t\t}\n\n\t\tif (!warehouse && this.frm.doc.doctype === 'Stock Reconciliation') {\n\t\t\twarehouse = this.get_warehouse();\n\t\t}\n\n\t\treturn {\n\t\t\t'item_code': this.item.item_code,\n\t\t\t'warehouse': [\"=\", warehouse]\n\t\t};\n\t}\n\n\tget_dialog_fields() {\n\t\tlet fields = [];\n\n\t\tfields.push({\n\t\t\tfieldtype: 'Link',\n\t\t\tfieldname: 'warehouse',\n\t\t\tlabel: __('Warehouse'),\n\t\t\toptions: 'Warehouse',\n\t\t\tdefault: this.get_warehouse(),\n\t\t\tonchange: () => {\n\t\t\t\tthis.item.warehouse = this.dialog.get_value('warehouse');\n\t\t\t\tthis.get_auto_data()\n\t\t\t},\n\t\t\tget_query: () => {\n\t\t\t\treturn {\n\t\t\t\t\tfilters: {\n\t\t\t\t\t\t'is_group': 0,\n\t\t\t\t\t\t'company': this.frm.doc.company,\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t});\n\n\t\tif (this.frm.doc.doctype === 'Stock Entry'\n\t\t\t&& this.frm.doc.purpose === 'Manufacture') {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Column Break',\n\t\t\t});\n\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\tfieldname: 'work_order',\n\t\t\t\tlabel: __('For Work Order'),\n\t\t\t\toptions: 'Work Order',\n\t\t\t\tread_only: 1,\n\t\t\t\tdefault: this.frm.doc.work_order,\n\t\t\t});\n\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t});\n\t\t}\n\n\t\tfields.push({\n\t\t\tfieldtype: 'Column Break',\n\t\t});\n\n\t\tif (this.item.has_serial_no) {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\toptions: 'Barcode',\n\t\t\t\tfieldname: 'scan_serial_no',\n\t\t\t\tlabel: __('Scan Serial No'),\n\t\t\t\tget_query: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: this.get_serial_no_filters()\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tonchange: () => this.scan_barcode_data()\n\t\t\t});\n\t\t}\n\n\t\tif (this.item.has_batch_no && !this.item.has_serial_no) {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\toptions: 'Barcode',\n\t\t\t\tfieldname: 'scan_batch_no',\n\t\t\t\tlabel: __('Scan Batch No'),\n\t\t\t\tonchange: () => this.scan_barcode_data()\n\t\t\t});\n\t\t}\n\n\t\tif (this.item?.type_of_transaction === \"Outward\") {\n\t\t\tfields = [...this.get_filter_fields(), ...fields];\n\t\t} else {\n\t\t\tfields = [...fields, ...this.get_attach_field()];\n\t\t}\n\n\t\tfields.push({\n\t\t\tfieldtype: 'Section Break',\n\t\t});\n\n\t\tfields.push({\n\t\t\tfieldname: 'entries',\n\t\t\tfieldtype: 'Table',\n\t\t\tallow_bulk_edit: true,\n\t\t\tdata: [],\n\t\t\tfields: this.get_dialog_table_fields(),\n\t\t});\n\n\t\treturn fields;\n\t}\n\n\tget_attach_field() {\n\t\tlet label = this.item?.has_serial_no ? __('Serial Nos') : __('Batch Nos');\n\t\tlet primary_label = this.bundle\n\t\t\t? __('Update') : __('Add');\n\n\t\tif (this.item?.has_serial_no && this.item?.has_batch_no) {\n\t\t\tlabel = __('Serial Nos / Batch Nos');\n\t\t}\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\tlabel: __('{0} {1} via CSV File', [primary_label, label])\n\t\t\t}\n\t\t]\n\n\t\tif (this.item?.has_serial_no) {\n\t\t\tfields = [...fields,\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Check',\n\t\t\t\t\tlabel: __('Import Using CSV file'),\n\t\t\t\t\tfieldname: 'import_using_csv_file',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: __('{0} {1} Manually', [primary_label, label]),\n\t\t\t\t\tdepends_on: 'eval:doc.import_using_csv_file === 0',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Small Text',\n\t\t\t\t\tlabel: __('Enter Serial Nos'),\n\t\t\t\t\tfieldname: 'upload_serial_nos',\n\t\t\t\t\tdepends_on: 'eval:doc.import_using_csv_file === 0',\n\t\t\t\t\tdescription: __('Enter each serial no in a new line'),\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Column Break',\n\t\t\t\t\tdepends_on: 'eval:doc.import_using_csv_file === 0',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Button',\n\t\t\t\t\tfieldname: 'make_serial_nos',\n\t\t\t\t\tlabel: __('Create Serial Nos'),\n\t\t\t\t\tdepends_on: 'eval:doc.import_using_csv_file === 0',\n\t\t\t\t\tclick: () => {\n\t\t\t\t\t\tthis.create_serial_nos();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval:doc.import_using_csv_file === 1',\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\n\t\tfields = [...fields,\n\t\t\t{\n\t\t\t\tfieldtype: 'Button',\n\t\t\t\tfieldname: 'download_csv',\n\t\t\t\tlabel: __('Download CSV Template'),\n\t\t\t\tclick: () => this.download_csv_file()\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Column Break',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Attach',\n\t\t\t\tfieldname: 'attach_serial_batch_csv',\n\t\t\t\tlabel: __('Attach CSV File'),\n\t\t\t\tonchange: () => this.upload_csv_file()\n\t\t\t}\n\t\t];\n\n\t\treturn fields;\n\t}\n\n\tcreate_serial_nos() {\n\t\tlet {upload_serial_nos} = this.dialog.get_values();\n\n\t\tif (!upload_serial_nos) {\n\t\t\tfrappe.throw(__('Please enter Serial Nos'));\n\t\t}\n\n\t\tfrappe.call({\n\t\t\tmethod: 'erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.create_serial_nos',\n\t\t\targs: {\n\t\t\t\titem_code: this.item.item_code,\n\t\t\t\tserial_nos: upload_serial_nos\n\t\t\t},\n\t\t\tcallback: (r) => {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tthis.dialog.fields_dict.entries.df.data = [];\n\t\t\t\t\tthis.set_data(r.message);\n\t\t\t\t\tthis.update_bundle_entries();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tdownload_csv_file() {\n\t\tlet csvFileData = ['Serial No'];\n\n\t\tif (this.item.has_serial_no && this.item.has_batch_no) {\n\t\t\tcsvFileData = ['Serial No', 'Batch No', 'Quantity'];\n\t\t} else if (this.item.has_batch_no) {\n\t\t\tcsvFileData = ['Batch No', 'Quantity'];\n\t\t}\n\n\t\tconst method = `/api/method/erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.download_blank_csv_template?content=${encodeURIComponent(JSON.stringify(csvFileData))}`;\n\t\tconst w = window.open(frappe.urllib.get_full_url(method));\n\t\tif (!w) {\n\t\t\tfrappe.msgprint(__(\"Please enable pop-ups\"));\n\t\t}\n\t}\n\n\tupload_csv_file() {\n\t\tconst file_path = this.dialog.get_value(\"attach_serial_batch_csv\")\n\n\t\tfrappe.call({\n\t\t\tmethod: 'erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.upload_csv_file',\n\t\t\targs: {\n\t\t\t\titem_code: this.item.item_code,\n\t\t\t\tfile_path: file_path\n\t\t\t},\n\t\t\tcallback: (r) => {\n\t\t\t\tif (r.message.serial_nos && r.message.serial_nos.length) {\n\t\t\t\t\tthis.set_data(r.message.serial_nos);\n\t\t\t\t} else if (r.message.batch_nos && r.message.batch_nos.length) {\n\t\t\t\t\tthis.set_data(r.message.batch_nos);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tget_filter_fields() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\tlabel: __('Auto Fetch')\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tfieldname: 'qty',\n\t\t\t\tlabel: __('Qty to Fetch'),\n\t\t\t\tonchange: () => this.get_auto_data()\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Column Break',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\toptions: ['FIFO', 'LIFO', 'Expiry'],\n\t\t\t\tdefault: 'FIFO',\n\t\t\t\tfieldname: 'based_on',\n\t\t\t\tlabel: __('Fetch Based On'),\n\t\t\t\tonchange: () => this.get_auto_data()\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Section Break',\n\t\t\t},\n\t\t]\n\n\t}\n\n\tget_dialog_table_fields() {\n\t\tlet fields = []\n\n\t\tif (this.item.has_serial_no) {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\toptions: 'Serial No',\n\t\t\t\tfieldname: 'serial_no',\n\t\t\t\tlabel: __('Serial No'),\n\t\t\t\tin_list_view: 1,\n\t\t\t\tget_query: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: this.get_serial_no_filters()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tlet batch_fields = []\n\t\tif (this.item.has_batch_no) {\n\t\t\tbatch_fields = [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'Link',\n\t\t\t\t\toptions: 'Batch',\n\t\t\t\t\tfieldname: 'batch_no',\n\t\t\t\t\tlabel: __('Batch No'),\n\t\t\t\t\tin_list_view: 1,\n\t\t\t\t\tget_query: () => {\n\t\t\t\t\t\tlet is_inward = false;\n\t\t\t\t\t\tif (([\"Purchase Receipt\", \"Purchase Invoice\"].includes(this.frm.doc.doctype) && !this.frm.doc.is_return)\n\t\t\t\t\t\t\t|| (this.frm.doc.doctype === 'Stock Entry' && this.frm.doc.purpose === 'Material Receipt')) {\n\t\t\t\t\t\t\tis_inward = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tquery : \"erpnext.controllers.queries.get_batch_no\",\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\t'item_code': this.item.item_code,\n\t\t\t\t\t\t\t\t'warehouse': this.item.s_warehouse || this.item.t_warehouse || this.item.warehouse,\n\t\t\t\t\t\t\t\t'is_inward': is_inward\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t]\n\n\t\t\tif (!this.item.has_serial_no) {\n\t\t\t\tbatch_fields.push({\n\t\t\t\t\tfieldtype: 'Float',\n\t\t\t\t\tfieldname: 'qty',\n\t\t\t\t\tlabel: __('Quantity'),\n\t\t\t\t\tin_list_view: 1,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tfields = [...fields, ...batch_fields];\n\n\t\tfields.push({\n\t\t\tfieldtype: 'Data',\n\t\t\tfieldname: 'name',\n\t\t\tlabel: __('Name'),\n\t\t\thidden: 1,\n\t\t});\n\n\t\treturn fields;\n\t}\n\n\tget_auto_data() {\n\t\tlet { qty, based_on } = this.dialog.get_values();\n\n\t\tif (this.item.serial_and_batch_bundle || this.item.rejected_serial_and_batch_bundle) {\n\t\t\tif (qty === this.qty) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this.item.serial_no || this.item.batch_no) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!based_on) {\n\t\t\tbased_on = 'FIFO';\n\t\t}\n\n\t\tif (qty) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.get_auto_data',\n\t\t\t\targs: {\n\t\t\t\t\titem_code: this.item.item_code,\n\t\t\t\t\twarehouse: this.item.warehouse || this.item.s_warehouse,\n\t\t\t\t\thas_serial_no: this.item.has_serial_no,\n\t\t\t\t\thas_batch_no: this.item.has_batch_no,\n\t\t\t\t\tqty: qty,\n\t\t\t\t\tbased_on: based_on\n\t\t\t\t},\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\tthis.dialog.fields_dict.entries.df.data = r.message;\n\t\t\t\t\t\tthis.dialog.fields_dict.entries.grid.refresh();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tscan_barcode_data() {\n\t\tconst { scan_serial_no, scan_batch_no } = this.dialog.get_values();\n\n\t\tif (scan_serial_no || scan_batch_no) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.is_serial_batch_no_exists',\n\t\t\t\targs: {\n\t\t\t\t\titem_code: this.item.item_code,\n\t\t\t\t\ttype_of_transaction: this.item.type_of_transaction,\n\t\t\t\t\tserial_no: scan_serial_no,\n\t\t\t\t\tbatch_no: scan_batch_no,\n\t\t\t\t},\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tthis.update_serial_batch_no();\n\t\t\t\t}\n\n\t\t\t})\n\t\t}\n\t}\n\n\tupdate_serial_batch_no() {\n\t\tconst { scan_serial_no, scan_batch_no } = this.dialog.get_values();\n\n\t\tif (scan_serial_no) {\n\t\t\tlet existing_row = this.dialog.fields_dict.entries.df.data.filter(d => {\n\t\t\t\tif (d.serial_no === scan_serial_no) {\n\t\t\t\t\treturn d\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (existing_row?.length) {\n\t\t\t\tfrappe.throw(__('Serial No {0} already exists', [scan_serial_no]));\n\t\t\t}\n\n\t\t\tif (!this.item.has_batch_no) {\n\t\t\t\tthis.dialog.fields_dict.entries.df.data.push({\n\t\t\t\t\tserial_no: scan_serial_no\n\t\t\t\t});\n\n\t\t\t\tthis.dialog.fields_dict.scan_serial_no.set_value('');\n\t\t\t} else {\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.get_batch_no_from_serial_no',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tserial_no: scan_serial_no,\n\t\t\t\t\t},\n\t\t\t\t\tcallback: (r) => {\n\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\tthis.dialog.fields_dict.entries.df.data.push({\n\t\t\t\t\t\t\t\tserial_no: scan_serial_no,\n\t\t\t\t\t\t\t\tbatch_no: r.message\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tthis.dialog.fields_dict.scan_serial_no.set_value('');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t})\n\t\t\t}\n\t\t} else if (scan_batch_no) {\n\t\t\tlet existing_row = this.dialog.fields_dict.entries.df.data.filter(d => {\n\t\t\t\tif (d.batch_no === scan_batch_no) {\n\t\t\t\t\treturn d\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (existing_row?.length) {\n\t\t\t\texisting_row[0].qty += 1;\n\t\t\t} else {\n\t\t\t\tthis.dialog.fields_dict.entries.df.data.push({\n\t\t\t\t\tbatch_no: scan_batch_no,\n\t\t\t\t\tqty: 1\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.dialog.fields_dict.scan_batch_no.set_value('');\n\t\t}\n\n\t\tthis.dialog.fields_dict.entries.grid.refresh();\n\t}\n\n\tupdate_bundle_entries() {\n\t\tlet entries = this.dialog.get_values().entries;\n\t\tlet warehouse = this.dialog.get_value('warehouse');\n\n\t\tif (entries && !entries.length || !entries) {\n\t\t\tfrappe.throw(__('Please add atleast one Serial No / Batch No'));\n\t\t}\n\n\t\tfrappe.call({\n\t\t\tmethod: 'erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.add_serial_batch_ledgers',\n\t\t\targs: {\n\t\t\t\tentries: entries,\n\t\t\t\tchild_row: this.item,\n\t\t\t\tdoc: this.frm.doc,\n\t\t\t\twarehouse: warehouse,\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tthis.callback && this.callback(r.message);\n\t\t\tthis.frm.save();\n\t\t\tthis.dialog.hide();\n\t\t})\n\t}\n\n\tedit_full_form() {\n\t\tlet bundle_id = this.item.serial_and_batch_bundle\n\t\tif (!bundle_id) {\n\t\t\tlet _new = frappe.model.get_new_doc(\n\t\t\t\t\"Serial and Batch Bundle\", null, null, true\n\t\t\t);\n\n\t\t\t_new.item_code = this.item.item_code;\n\t\t\t_new.warehouse = this.get_warehouse();\n\t\t\t_new.has_serial_no = this.item.has_serial_no;\n\t\t\t_new.has_batch_no = this.item.has_batch_no;\n\t\t\t_new.type_of_transaction = this.item.type_of_transaction;\n\t\t\t_new.company = this.frm.doc.company;\n\t\t\t_new.voucher_type = this.frm.doc.doctype;\n\t\t\tbundle_id = _new.name;\n\t\t}\n\n\t\tfrappe.set_route(\"Form\", \"Serial and Batch Bundle\", bundle_id);\n\t\tthis.dialog.hide();\n\t}\n\n\tget_warehouse() {\n\t\treturn (this.item?.type_of_transaction === \"Outward\" ?\n\t\t\t(this.item.warehouse || this.item.s_warehouse)\n\t\t\t: (this.item.warehouse || this.item.t_warehouse));\n\t}\n\n\trender_data() {\n\t\tif (this.bundle) {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: 'erpnext.stock.doctype.serial_and_batch_bundle.serial_and_batch_bundle.get_serial_batch_ledgers',\n\t\t\t\targs: {\n\t\t\t\t\titem_code: this.item.item_code,\n\t\t\t\t\tname: this.bundle,\n\t\t\t\t\tvoucher_no: !this.frm.is_new() ? this.item.parent : \"\",\n\t\t\t\t}\n\t\t\t}).then(r => {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tthis.set_data(r.message);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tset_data(data) {\n\t\tdata.forEach(d => {\n\t\t\td.qty = Math.abs(d.qty);\n\t\t\tthis.dialog.fields_dict.entries.df.data.push(d);\n\t\t});\n\n\t\tthis.dialog.fields_dict.entries.grid.refresh();\n\t}\n}"],
  "mappings": "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",
  "names": ["frm", "item", "callback", "_a", "_b", "_c", "_d", "_e", "label", "primary_label", "qty", "serial_nos", "serial_no", "warehouse", "fields", "upload_serial_nos", "r", "csvFileData", "method", "file_path", "batch_fields", "is_inward", "based_on", "scan_serial_no", "scan_batch_no", "existing_row", "d", "entries", "bundle_id", "_new", "data"]
}
